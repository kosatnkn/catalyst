openapi: 3.0.0

info:
  title: Catalyst
  description: >
    Go clean architecture RESTful API
  version: v2.3.0

servers:
  - url: http://localhost:3000/api
    description: Mock

paths:

  # -------------------------------------------------
  # API Information
  # -------------------------------------------------

  /:
    get: # Get API information
      tags:
        - information
      summary: Sends information about the API
      description: >
        Provides information about the API like `name`, `version`, `purpose`.
      responses:
        '200':
          description: API Details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        enum:
                          - $ref: '#/info/title'
                      version:
                        type: string
                        enum:
                          - $ref: '#/info/version'
                      purpose:
                        type: string
                        enum:
                          - $ref: '#/info/description'

  # -------------------------------------------------
  # Sample
  # -------------------------------------------------

  /samples:
    get: # Get samples
      tags:
        - samples
      summary: Return a collection of samples
      parameters:
        - name: filters
          in: query
          description: Additional filters JSON in string serialized format
          schema:
            $ref: '#/components/schemas/filters'
        - in: query
          name: paginator
          description: Paginator JSON in string serialized format
          schema:
            $ref: '#/components/schemas/paginator'
      responses:
        200:
          description: Samples collection
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/res_sample'
        400:
          description: Domain Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

    post: # Create new sample
      tags:
        - samples
      summary: Create a new sample
      description: >
        Create new sample from provided data.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/req_sample'
        required: true
      responses:
        201:
          description: Sample created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/identifier'
        400:
          description: Domain Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation_error'
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /samples/{id}:
    get: # Get sample by id
      tags:
        - samples
      summary: Return a single sample by id
      parameters:
        - name: id
          in: path
          description: Identifier
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/res_sample'
        400:
          description: Domain Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

    put: # Edit sample
      tags:
        - samples
      summary: Update a sample
      parameters:
        - name: id
          in: path
          description: Identifier
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/req_sample'
        required: true
      responses:
        204:
          description: Sample updated
        400:
          description: Domain Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation_error'
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

    delete: # Delete sample
      tags:
        - samples
      summary: Delete a sample
      parameters:
        - name: id
          in: path
          description: Identifier
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Sample deleted
        400:
          description: Domain Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'


# -------------------------------------------------
# Components
# -------------------------------------------------

components:

  schemas:
  
    identifier: 
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 99999
    
    filters:
      type: string
      example: '[{"key": "value"}]'
  
    paginator: 
      type: string
      example: '{"page": 1, "size": 10}'
      
    req_sample: 
      type: object
      properties:
        name:
          type: string
        password:
          type: string
    
    res_sample: 
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          
    generic_error:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            trace:
              type: string
          required:
            - code
            - message
    
    validation_error:
      type: object
      properties:
        errors:
          type: object
          properties:
            field: 
              type: array
              items: 
                type: string
      required:
        - errors
